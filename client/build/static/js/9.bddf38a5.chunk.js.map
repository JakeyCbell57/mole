{"version":3,"sources":["Views/Processors.jsx","api.jsx"],"names":["rightAlign","display","justifyContent","smallCol","maxWidth","ProcessorsView","props","_this","Object","_Users_rocky_Coding_Projects_react_dash_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_rocky_Coding_Projects_react_dash_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_rocky_Coding_Projects_react_dash_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","componentDidMount","getData","updateInput","event","setState","_Users_rocky_Coding_Projects_react_dash_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","name","value","api","get","then","processors","console","error","processorTypes","addProcessor","_this$state","state","apiId","apiKey","processorType","post","catch","alert","renderProcessors","map","renderProcessor","processor","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","key","id","className","style","healthy","type","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","variant","enabled","onClick","toggleEnabled","deleteProcessor","window","confirm","delete","concat","status","patch","updateProcessorSelect","e","log","currentType","find","parseInt","currentParams","parameters","renderProcessorTypes","types","_this$state2","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","xs","sm","md","lg","xl","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","Header","Title","as","Body","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","Group","Control","onChange","defaultValue","controlId","Label","placeholder","includes","react_bootstrap__WEBPACK_IMPORTED_MODULE_12__","responsive","hover","Component","axios__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","axios","n","Axios","create","baseURL","location","hostname","withCredentials","interceptors","response","use","data","Promise","reject"],"mappings":"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","file":"static/js/9.bddf38a5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Row, Col, Card, Table, Form, Button} from 'react-bootstrap';\nimport api from '../api';\n\nconst rightAlign = {\n  display: 'flex',\n  justifyContent: 'flex-end'\n}\n\nconst smallCol = {\n  maxWidth: '200px'\n}\n\nexport default class ProcessorsView extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      processors: [],\n      processorTypes: [],\n      name: '',\n      apiId: '',\n      apiKey: '',\n      processorType: '',\n      currentParams: []\n    }\n  }\n\n  componentDidMount = () => this.getData();\n\n  updateInput = event => this.setState({ [event.target.name]: event.target.value })\n\n  getData = () => {\n    api.get('/processors')\n      .then(processors => processors && this.setState({ processors }))\n      .then(console.error)\n\n    api.get('/processors/types')\n      .then(processorTypes => processorTypes && this.setState({ processorTypes }))\n      .then(console.error)\n  }\n\n  addProcessor = () => {\n    const { name, apiId, apiKey, processorType } = this.state;\n\n    if(!name) {\n      return alert('Please enter a name');\n    }\n\n    if(!processorType) {\n      return alert('Please select a processor type');\n    }\n\n    api.post('/processors', { name, apiId, apiKey, processorType })\n      .then(this.getData)\n      .catch(console.error)\n  }\n\n  renderProcessors = processors => processors.map(this.renderProcessor)\n\n  renderProcessor = processor => (\n    <tr key={processor.id+processor.name} className=\"unread\">\n      <td>\n        <h6 className=\"mb-1\">{processor.name}</h6>\n      </td>\n      <td style={smallCol}>\n        <h6 className=\"mb-1\">{processor.healthy ? 'yes' : 'no'}</h6>\n      </td>\n      <td>\n        <h6 className=\"mb-1\">{processor.type}</h6>\n      </td>\n      <td style={rightAlign}>\n        <Button variant={processor.enabled ? 'success' : 'warning'} onClick={this.toggleEnabled(processor.id, processor.enabled)}>{processor.enabled ? 'Enabled' : 'Disabled'}</Button>\n        <Button variant=\"danger\" onClick={this.deleteProcessor(processor.id, processor.name)}>Delete</Button>\n      </td>\n    </tr>\n  )\n\n  deleteProcessor = (id, name) => () => {\n    const confirmed = window.confirm('Are you sure you want to delete client ' + name + '?')\n\n    if(confirmed) {\n      api.delete(`/processors/${id}`)\n        .then(this.getData)\n        .catch(console.error)\n    }\n  }\n\n  toggleEnabled = (id, status) => () => {\n    api.patch(`/processors/${id}/enabled`, { enabled: !status })\n      .then(this.getData)\n      .catch(console.error)\n  }\n\n  updateProcessorSelect = (e) => {\n    const value = e.target.value;\n\n    this.setState({ processorType: value })\n    const { processorTypes } = this.state;\n\n    console.log(processorTypes)\n    const currentType = processorTypes.find(type => type.id === parseInt(value))\n\n    console.log(currentType)\n\n    if(currentType) {\n      this.setState({ currentParams: currentType.parameters })\n    } else {\n      this.setState({ currentParams: [] })\n\n    }\n  }\n\n  renderProcessorTypes = types => types.map(type => (\n    <option key={type.name + type.id} value={type.id}>{type.name}</option>\n  ))\n\n  render() {\n    const { name, apiId, apiKey, processors, processorTypes, currentParams } = this.state;\n\n    return (\n      <div>\n        <Row>\n          <Col xs={12} sm={12} md={6} lg={6} xl={6}>\n            <Card className='Recent-Users'>\n                <Card.Header>\n                  <Card.Title as='h5'>Add Processor</Card.Title>\n                </Card.Header>\n                <Card.Body className='px-10 py-10'>\n                    <Form.Group>\n                        <Form.Control onChange={this.updateProcessorSelect} as=\"select\" className=\"mb-3\">\n                          <option defaultValue={false}>Select processor type</option>\n                          { this.renderProcessorTypes(processorTypes) }\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId=\"name\">\n                          <Form.Label>Name</Form.Label>\n                          <Form.Control onChange={this.updateInput} name='name' type=\"text\" placeholder=\"Enter a processor name\" value={name}/>\n                      </Form.Group>\n\n                      { currentParams.includes('apiId') && (\n                        <Form.Group controlId=\"apiId\">\n                          <Form.Label>Api Id</Form.Label>\n                          <Form.Control onChange={this.updateInput} name='apiId' type=\"text\" placeholder=\"Enter processor's api id\" value={apiId}/>\n                        </Form.Group>\n                      )}\n\n                      { currentParams.includes('apiKey') && (\n                        <Form.Group controlId=\"apiKey\">\n                          <Form.Label>Api Key</Form.Label>\n                          <Form.Control onChange={this.updateInput} name='apiKey' type=\"text\" placeholder=\"Enter processor's api key\" value={apiKey}/>\n                        </Form.Group>\n                      )}\n\n                      <Button variant=\"primary\" onClick={this.addProcessor}>\n                        Add Processor\n                    </Button>\n                </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={12} lg={12} xl={12}>\n            <Card className='Recent-Users'>\n                <Card.Header>\n                    <Card.Title as='h5'>Current Processors</Card.Title>\n                </Card.Header>\n                <Card.Body className='px-0 py-0'>\n                    <Table responsive hover>\n                      <thead>\n                        <tr>\n                          <th>Name</th>\n                          <th>Connected</th>\n                          <th>Type</th>\n                          <th></th>\n                        </tr>\n                      </thead>\n                        <tbody>\n                          { this.renderProcessors(processors) }\n                        </tbody>\n                    </Table>\n                </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}","import Axios from 'axios';\n\nconst axios = Axios.create({\n  baseURL: window.location.hostname === 'localhost' ? 'http://localhost:8000/api' : '/api',\n  withCredentials: true\n})\n\naxios.interceptors.response.use(\n  response => response.data, \n  error => Promise.reject(error.data)\n);\n\nexport default axios;\n"],"sourceRoot":""}