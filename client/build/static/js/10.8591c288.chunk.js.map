{"version":3,"sources":["utils/time.jsx","Views/Users.jsx","api.jsx"],"names":["formatLocalTime","timestamp","moment","format","rightAlign","display","justifyContent","Users","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","getData","api","get","then","users","setState","catch","console","error","addUser","_this$state","state","username","password","passwordConfirmation","length","alert","post","updateInput","event","defineProperty","target","name","value","deleteUser","userId","delete","concat","renderUsers","map","renderUser","user","react_default","a","createElement","key","className","lastLogin","style","Button","variant","onClick","_this$state2","Row","Col","xs","sm","md","lg","xl","Card","Header","Title","as","Body","Form","Group","controlId","Label","Control","onChange","type","placeholder","isValid","minLength","isInvalid","Table","responsive","hover","Component","axios__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","axios","n","Axios","create","baseURL","window","location","hostname","withCredentials","interceptors","response","use","data","Promise","reject"],"mappings":"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","file":"static/js/10.8591c288.chunk.js","sourcesContent":["import moment from 'moment-timezone';\n\nexport const formatLocalTime = timestamp => moment(timestamp).format('hh:mm:ss a DD MMM YYYY')\n","import React, { Component } from 'react'\nimport {Row, Col, Card, Table, Form, Button} from 'react-bootstrap';\nimport api from '../api';\nimport { formatLocalTime } from '../utils/time';\n\nconst rightAlign = {\n  display: 'flex',\n  justifyContent: 'flex-end'\n}\n\nexport default class Users extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      users: [],\n      username: '',\n      password: '',\n      passwordConfirmation: ''\n    }\n  }\n\n  componentDidMount = () => {\n    this.getData();\n  }\n\n  getData = () => {\n    api.get('/users')\n      .then(users => users && this.setState({ users}))\n      .catch(console.error)\n  }\n\n  addUser = () => {\n    const { username, password, passwordConfirmation } = this.state;\n\n    if(!password || password.length < 8) {\n      return alert('Password must be longer than 8 characters')\n    }\n\n    if(!username || username.length < 8 ) {\n      return alert('Username must be longer than 8 characters')\n    }\n\n    if(password !== passwordConfirmation) {\n      return alert('Passwords do not match')\n    }\n\n    api.post('/users', { username, password })\n      .then(this.getData)\n      .catch(console.error)\n  }\n\n  updateInput = event => this.setState({ [event.target.name]: event.target.value })\n\n  deleteUser = userId => () => api.delete(`/users/${userId}`).then(this.getData).catch(console.error)\n\n  renderUsers = users => users.map(this.renderUser)\n\n  renderUser = user => (\n    <tr key={user.userId} className=\"unread\">\n      <td>\n          <h6 className=\"mb-1\">{user.username}</h6>\n      </td>\n      <td>\n        <h6 className=\"text-muted\"><i className=\"fa fa-circle text-c-green f-10 m-r-15\"/>{formatLocalTime(user.lastLogin)}</h6>\n      </td>\n      <td style={rightAlign}>\n      <Button variant=\"danger\" onClick={this.deleteUser(user.userId)}>Delete</Button>\n      </td>\n    </tr>\n  )\n\n  render() {\n    const { users, username, password, passwordConfirmation } = this.state;\n\n    return (\n      <div>\n        <Row>\n          <Col xs={12} sm={12} md={6} lg={6} xl={6}>\n            <Card className='Recent-Users'>\n                <Card.Header>\n                  <Card.Title as='h5'>Add User</Card.Title>\n                </Card.Header>\n                <Card.Body className='px-10 py-10'>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control onChange={this.updateInput} name='username' type=\"text\" placeholder=\"Enter username\" value={username}/>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Enter Password</Form.Label>\n                        <Form.Control isValid={password !== passwordConfirmation} onChange={this.updateInput} name='password' minLength={8} type=\"password\" placeholder=\"Enter Password\"  value={password}/>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control isValid={password && password === passwordConfirmation} isInvalid={password !== passwordConfirmation} onChange={this.updateInput} name='passwordConfirmation' minLength={8} type=\"password\" placeholder=\"Confirm Password\"  value={passwordConfirmation}/>\n                    </Form.Group>\n                      <Button variant=\"primary\" onClick={this.addUser}>\n                        Add User\n                    </Button>\n                </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={12} lg={12} xl={12}>\n            <Card className='Recent-Users'>\n                <Card.Header>\n                    <Card.Title as='h5'>Current Users</Card.Title>\n                </Card.Header>\n                <Card.Body className='px-0 py-0'>\n                    <Table responsive hover>\n                      <thead>\n                        <tr>\n                          <th>Username</th>\n                          <th>Last Login</th>\n                          <th></th>\n                        </tr>\n                      </thead>\n                        <tbody>\n                          { this.renderUsers(users) }\n                        </tbody>\n                    </Table>\n                </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}","import Axios from 'axios';\n\nconst axios = Axios.create({\n  baseURL: window.location.hostname === 'localhost' ? 'http://localhost:8000/api' : '/api',\n  withCredentials: true\n})\n\naxios.interceptors.response.use(\n  response => response.data, \n  error => Promise.reject(error.data)\n);\n\nexport default axios;\n"],"sourceRoot":""}